{"version":3,"sources":["components/modal/CustomModal.js","App.js","actions/modal.js","reportWebVitals.js","reducer/modal.js","reducer/index.js","index.js"],"names":["CustomModal","show","close","children","title","ReactDOM","createPortal","className","onClick","e","stopPropagation","document","getElementById","App","dispatch","useDispatch","useSelector","state","modal","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","render","StrictMode"],"mappings":"iQAwCeA,EApCK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAKC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MACxC,OAAOC,IAASC,aACd,mCAECL,EAEC,qBACEM,UAAU,iBACVC,QAAS,kBAAMN,KAFjB,SAIE,sBAAKK,UAAU,QAAQC,QAAS,SAACC,GAAD,OAAOA,EAAEC,mBAAzC,UACE,yBAAQH,UAAU,eAAlB,UACE,oBAAIA,UAAU,qBAAd,SAAoCH,IACpC,wBAAQG,UAAU,QAAQC,QAAS,kBAAMN,KAAzC,uBAIF,sBAAMK,UAAU,gBAAhB,SAAiCJ,IACjC,yBAAQI,UAAU,eAAlB,UACE,wBAAQA,UAAU,cAAcC,QAAS,kBAAMN,KAA/C,oBAIA,wBAAQK,UAAU,SAAlB,4BAIJ,OAGJI,SAASC,eAAe,iBCHbC,MAzBf,WAEE,IAAMC,EAAWC,cACXd,EAAOe,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMjB,QAM9C,OACE,sBAAKM,UAAU,MAAf,UACE,wBAAQA,UAAU,UAAUC,QAAS,kBALjBM,ECXf,CACLK,KAAM,gBDeN,mBAGA,cAAC,EAAD,CAAalB,KAAMA,EAAMG,MAAM,iBAAiBF,MAPjC,kBAAMY,ECNhB,CACLK,KAAM,gBDYN,SACI,+IETKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCPRQ,EAAgB,CAClB5B,MAAK,GAoBQiB,EAjBD,WAAoC,IAAnCD,EAAkC,uDAA1BY,EAAeC,EAAW,uCAC/C,OAAQA,EAAOX,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEhB,MAAM,IAEV,IAAK,aACH,OAAO,2BACFgB,GADL,IAEEhB,MAAM,IAEV,QACE,OAAOgB,ICdAc,cAAgB,CAC3Bb,U,OCOEc,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACZC,EACAN,EAAiBO,YAAgBC,OAGnCnC,IAASoC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJzB,SAASC,eAAe,SAM1BQ,M","file":"static/js/main.5e921bf6.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport './modal.css'\r\n\r\nconst CustomModal = ({show,close,children,title}) => {\r\n  return ReactDOM.createPortal(\r\n    <>\r\n     {\r\n     show ?\r\n     \r\n      <div\r\n        className=\"modalContainer\"\r\n        onClick={() => close()}\r\n      >\r\n        <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\r\n          <header className=\"modal_header\">\r\n            <h2 className=\"modal_header-title\">{title}</h2>\r\n            <button className=\"close\" onClick={() => close()}>\r\n            &#10006;\r\n            </button>\r\n          </header>\r\n          <main className=\"modal_content\">{children}</main>\r\n          <footer className=\"modal_footer\">\r\n            <button className=\"modal-close\" onClick={() => close()}>\r\n              Cancel\r\n            </button>\r\n\r\n            <button className=\"submit\">Submit</button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n      : null\r\n     }\r\n    </>,\r\n    document.getElementById(\"customModal\")\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CustomModal\r\n","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hideModalAction, showModalAction } from \"./actions/modal\";\nimport \"./App.css\";\nimport CustomModal from \"./components/modal/CustomModal\";\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.modal.show)\n  \n\n  const openModal = () => dispatch(showModalAction())\n  const closeModal = () => dispatch(hideModalAction())\n  \n  return (\n    <div className=\"App\">\n      <button className=\"clickme\" onClick={() => openModal()}>\n        Modal\n      </button>\n      <CustomModal show={show} title=\"My Modal Title\" close={closeModal} >\n          <p>\n            my content some more content xyz .\n            my content some more content xyz .\n            my content some more content xyz .\n          </p>\n      </CustomModal>\n    </div>\n  );\n}\n\nexport default App;\n","export const showModalAction = () => {\r\n    return {\r\n      type: \"SHOW_MODAL\",\r\n    };\r\n  };\r\n\r\n  export const hideModalAction = () => {\r\n    return {\r\n      type: \"HIDE_MODAL\",\r\n    };\r\n  };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    show:false\r\n  };\r\n  \r\n  const modal = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case \"SHOW_MODAL\":\r\n        return {\r\n          ...state,\r\n          show: true,\r\n        };\r\n      case \"HIDE_MODAL\":\r\n        return {\r\n          ...state,\r\n          show: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default modal\r\n  ","import { combineReducers } from \"redux\";\r\nimport modal from \"./modal\"\r\n\r\nexport default combineReducers({\r\n    modal\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducer\";\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}